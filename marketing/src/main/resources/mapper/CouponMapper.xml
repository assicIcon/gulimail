<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guli.marketing.mapper.CouponMapper">
  <resultMap id="BaseResultMap" type="com.guli.marketing.entity.Coupon">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="coupon_id" jdbcType="VARCHAR" property="couponId" />
    <result column="coupon_batch_id" jdbcType="VARCHAR" property="couponBatchId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="redemption_code" jdbcType="VARCHAR" property="redemptionCode" />
    <result column="available_start_time" jdbcType="TIMESTAMP" property="availableStartTime" />
    <result column="available_end_time" jdbcType="TIMESTAMP" property="availableEndTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, coupon_id, coupon_batch_id, `status`, redemption_code, available_start_time, 
    available_end_time, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.guli.marketing.entity.CouponExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from coupon
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from coupon
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.guli.marketing.entity.CouponExample">
    delete from coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.guli.marketing.entity.Coupon" useGeneratedKeys="true">
    insert into coupon (coupon_id, coupon_batch_id, `status`, 
      redemption_code, available_start_time, available_end_time, 
      create_time, update_time)
    values (#{couponId,jdbcType=VARCHAR}, #{couponBatchId,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{redemptionCode,jdbcType=VARCHAR}, #{availableStartTime,jdbcType=TIMESTAMP}, #{availableEndTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.guli.marketing.entity.Coupon" useGeneratedKeys="true">
    insert into coupon
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="couponBatchId != null">
        coupon_batch_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="redemptionCode != null">
        redemption_code,
      </if>
      <if test="availableStartTime != null">
        available_start_time,
      </if>
      <if test="availableEndTime != null">
        available_end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="couponId != null">
        #{couponId,jdbcType=VARCHAR},
      </if>
      <if test="couponBatchId != null">
        #{couponBatchId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="redemptionCode != null">
        #{redemptionCode,jdbcType=VARCHAR},
      </if>
      <if test="availableStartTime != null">
        #{availableStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="availableEndTime != null">
        #{availableEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guli.marketing.entity.CouponExample" resultType="java.lang.Long">
    select count(*) from coupon
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update coupon
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.couponId != null">
        coupon_id = #{record.couponId,jdbcType=VARCHAR},
      </if>
      <if test="record.couponBatchId != null">
        coupon_batch_id = #{record.couponBatchId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.redemptionCode != null">
        redemption_code = #{record.redemptionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.availableStartTime != null">
        available_start_time = #{record.availableStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.availableEndTime != null">
        available_end_time = #{record.availableEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update coupon
    set id = #{record.id,jdbcType=BIGINT},
      coupon_id = #{record.couponId,jdbcType=VARCHAR},
      coupon_batch_id = #{record.couponBatchId,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=TINYINT},
      redemption_code = #{record.redemptionCode,jdbcType=VARCHAR},
      available_start_time = #{record.availableStartTime,jdbcType=TIMESTAMP},
      available_end_time = #{record.availableEndTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guli.marketing.entity.Coupon">
    update coupon
    <set>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=VARCHAR},
      </if>
      <if test="couponBatchId != null">
        coupon_batch_id = #{couponBatchId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="redemptionCode != null">
        redemption_code = #{redemptionCode,jdbcType=VARCHAR},
      </if>
      <if test="availableStartTime != null">
        available_start_time = #{availableStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="availableEndTime != null">
        available_end_time = #{availableEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guli.marketing.entity.Coupon">
    update coupon
    set coupon_id = #{couponId,jdbcType=VARCHAR},
      coupon_batch_id = #{couponBatchId,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      redemption_code = #{redemptionCode,jdbcType=VARCHAR},
      available_start_time = #{availableStartTime,jdbcType=TIMESTAMP},
      available_end_time = #{availableEndTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>