<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guli.member.mapper.MemberFavoriteMapper">
  <resultMap id="BaseResultMap" type="com.guli.member.entity.MemberFavorite">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
    <result column="relation_id" jdbcType="VARCHAR" property="relationId" />
    <result column="favorite_name" jdbcType="VARCHAR" property="favoriteName" />
    <result column="favorite_type" jdbcType="VARCHAR" property="favoriteType" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, member_id, relation_id, favorite_name, favorite_type, image, link, create_time,
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.guli.member.entity.MemberFavoriteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member_favorite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from member_favorite
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from member_favorite
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.guli.member.entity.MemberFavoriteExample">
    delete from member_favorite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.guli.member.entity.MemberFavorite" useGeneratedKeys="true">
    insert into member_favorite (member_id, relation_id, favorite_name,
      favorite_type, image, link,
      create_time, update_time)
    values (#{memberId,jdbcType=VARCHAR}, #{relationId,jdbcType=VARCHAR}, #{favoriteName,jdbcType=VARCHAR},
      #{favoriteType,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.guli.member.entity.MemberFavorite" useGeneratedKeys="true">
    insert into member_favorite
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="relationId != null">
        relation_id,
      </if>
      <if test="favoriteName != null">
        favorite_name,
      </if>
      <if test="favoriteType != null">
        favorite_type,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="relationId != null">
        #{relationId,jdbcType=VARCHAR},
      </if>
      <if test="favoriteName != null">
        #{favoriteName,jdbcType=VARCHAR},
      </if>
      <if test="favoriteType != null">
        #{favoriteType,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guli.member.entity.MemberFavoriteExample" resultType="java.lang.Long">
    select count(*) from member_favorite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member_favorite
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=VARCHAR},
      </if>
      <if test="record.relationId != null">
        relation_id = #{record.relationId,jdbcType=VARCHAR},
      </if>
      <if test="record.favoriteName != null">
        favorite_name = #{record.favoriteName,jdbcType=VARCHAR},
      </if>
      <if test="record.favoriteType != null">
        favorite_type = #{record.favoriteType,jdbcType=VARCHAR},
      </if>
      <if test="record.image != null">
        image = #{record.image,jdbcType=VARCHAR},
      </if>
      <if test="record.link != null">
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member_favorite
    set id = #{record.id,jdbcType=BIGINT},
      member_id = #{record.memberId,jdbcType=VARCHAR},
      relation_id = #{record.relationId,jdbcType=VARCHAR},
      favorite_name = #{record.favoriteName,jdbcType=VARCHAR},
      favorite_type = #{record.favoriteType,jdbcType=VARCHAR},
      image = #{record.image,jdbcType=VARCHAR},
      link = #{record.link,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guli.member.entity.MemberFavorite">
    update member_favorite
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="relationId != null">
        relation_id = #{relationId,jdbcType=VARCHAR},
      </if>
      <if test="favoriteName != null">
        favorite_name = #{favoriteName,jdbcType=VARCHAR},
      </if>
      <if test="favoriteType != null">
        favorite_type = #{favoriteType,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guli.member.entity.MemberFavorite">
    update member_favorite
    set member_id = #{memberId,jdbcType=VARCHAR},
      relation_id = #{relationId,jdbcType=VARCHAR},
      favorite_name = #{favoriteName,jdbcType=VARCHAR},
      favorite_type = #{favoriteType,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
